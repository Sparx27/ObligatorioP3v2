@model MVC.Models.Disciplina.DisciplinaVM

@{
    ViewData["Title"] = "Seleccionar Disciplina Evento";
}

<section class="row mt-5 pb-5">
    @*     <div class="text-center">
    <a asp-action="Index" class="link link-success">Volver a la lista</a>
    </div> *@

    <div class="col-12 col-md-10 col-lg-6 offset-md-1 offset-lg-3 d-flex justify-content-center mt-3">

        <form asp-action="Create" method="get" class="w-100 rounded p-4 border border-3 border-danger">
            <h1 class="text-center mb-4 text-danger">Seleccionar Disciplina</h1>
            @if (ViewBag.ErrorMessage != null)
            {
                <p class="alert alert-danger text-center">@ViewBag.ErrorMessage</p>
            }
            @if (TempData["ErrorMessage"] != null)
            {
                <p class="alert alert-danger text-center">@TempData["ErrorMessage"]</p>
            }
            @if (TempData["Message"] != null)
            {
                <p class="alert alert-success text-center">@TempData["Message"]</p>
            }

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-control mb-2">
                <label for="idDisciplina" class="form-label">Seleccionar disciplina</label>
                <select id="idDisciplina" name="idDisciplina" class="form-select">
                    @foreach (var d in ViewBag.Disciplinas)
                    {
                        <option value="@d.Id">@d.Nombre</option>
                    }
                </select>
            </div>

            <div class="form-group">
                <input type="submit" value="Crear" class="btn btn-danger w-100" />
            </div>
        </form>
    </div>
</section>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
